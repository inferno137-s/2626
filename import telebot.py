import telebot
from telebot import types

bot = telebot.TeleBot('7677815065:AAHAJOUVybTC2VnUiK41dr9X7A3fl7NKmXE')

# States
STATE_PROFESSION = 0
STATE_PAYDAY = 1
STATE_SALARY = 2
STATE_FINISHED = 3

user_data = {} # –•—Ä–∞–Ω–∏—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è


@bot.message_handler(commands=['start'])
def start_command(message):
    bot.send_message(message.chat.id, "üéâ –ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –±–æ—Ç –≥–¥–µ —Ç—ã —Å–º–æ–∂–µ—à—å —Å—á–∏—Ç–∞—Ç—å —Å–≤–æ–π –±—é–¥–∂–µ—Ç!")
    show_main_menu(message)


def show_main_menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton("–û–ø—Ä–æ—Å"), types.KeyboardButton("–ú–µ–Ω—é"))
    bot.send_message(message.chat.id, "–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é. –í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:", reply_markup=markup)


def show_powerlifting_options(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = [
        "–ú–æ–∏ –¥–µ–Ω—å–≥–∏",
        "–ò—Å—Ç–æ—Ä–∏—è",
        "–ö–∞–ª–µ–Ω–¥–∞—Ä—å",
        "–ï–∂–µ–¥–Ω–µ–≤–Ω–æ–π –Ω–æ—Ä–º—ã —Ä–∞—Å—Ö–æ–¥–æ–≤",
        "–°–æ–≤–µ—Ç—ã",
        "üîô –ù–∞–∑–∞–¥"
    ]
    markup.add(*[types.KeyboardButton(btn) for btn in buttons])
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ —Ç–µ–º:", reply_markup=markup)


def send_excel_file(message):
    files = {
        "–ú–æ–∏ –¥–µ–Ω—å–≥–∏": 'D:\\TelegramBot\\BOT\\BBB\\–ü–∞—É—ç—Ä\\–ù–∞—á–∞–ª—å–Ω—ã–π.xlsx',
        "–ò—Å—Ç–æ—Ä–∏—è": 'D:\\TelegramBot\\BOT\\BBB\\–ü–∞—É—ç—Ä\\–°—Ä–µ–¥–Ω–∏–π.xlsx',
        "–ö–∞–ª–µ–Ω–¥–∞—Ä—å": 'D:\\TelegramBot\\BOT\\BBB\\–ü–∞—É—ç—Ä\\–í—ã—Å–æ–∫–∏–π.xlsx',
        "–ï–∂–µ–¥–Ω–µ–≤–Ω–æ–π –Ω–æ—Ä–º—ã —Ä–∞—Å—Ö–æ–¥–æ–≤": 'D:\\TelegramBot\\BOT\\BBB\\–ü–∞—É—ç—Ä\\–ñ–∏–º–æ–≤—ã–µ —Ä–∞—Å–∫–ª–∞–¥–∫–∏.docx',
        "–°–æ–≤–µ—Ç—ã": 'D:\\TelegramBot\\BOT\\BBB\\–ü–∞—É—ç—Ä\\–ñ–∏–º–æ–≤—ã–µ —Ä–∞—Å–∫–ª–∞–¥–∫–∏.docx'
    }

    file_name = files.get(message.text)
    if file_name:
        try:
            with open(file_name, 'rb') as file:
                bot.send_document(message.chat.id, file)
                back_markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                back_markup.add(types.KeyboardButton("üîô –ù–∞–∑–∞–¥"))
                bot.send_message(message.chat.id, "–í–æ—Ç —Ñ–∞–π–ª. –ù–∞–∂–º–∏—Ç–µ '–ù–∞–∑–∞–¥', —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è.", reply_markup=back_markup)
        except FileNotFoundError:
            bot.send_message(message.chat.id, "–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—É—Ç—å.")
        except Exception as e:
            bot.send_message(message.chat.id, f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª: {str(e)}")


@bot.message_handler(func=lambda message: True)
def handle_messages(message):
    chat_id = message.chat.id
    if message.chat.type == 'private':
        if message.text == "–ú–µ–Ω—é":
            show_powerlifting_options(message)
        elif message.text in ["–ú–æ–∏ –¥–µ–Ω—å–≥–∏", "–ò—Å—Ç–æ—Ä–∏—è", "–ö–∞–ª–µ–Ω–¥–∞—Ä—å", "–ï–∂–µ–¥–Ω–µ–≤–Ω–æ–π –Ω–æ—Ä–º—ã —Ä–∞—Å—Ö–æ–¥–æ–≤", "–°–æ–≤–µ—Ç—ã"]:
            send_excel_file(message)
        elif message.text == "üîô –ù–∞–∑–∞–¥":
            show_main_menu(message)
        elif message.text == "–û–ø—Ä–æ—Å":
            user_data[chat_id] = {} # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            ask_profession(message)


def ask_profession(message):
    chat_id = message.chat.id
    msg = bot.send_message(chat_id, "–ö–∞–∫–∞—è –≤–∞—à–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏—è?")
    bot.register_next_step_handler(msg, process_profession)


def process_profession(message):
    chat_id = message.chat.id
    user_data[chat_id]['profession'] = message.text
    ask_payday(message)


def ask_payday(message):
    chat_id = message.chat.id
    msg = bot.send_message(chat_id, "–ö–æ–≥–¥–∞ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –∑–∞—Ä–ø–ª–∞—Ç—É? (–Ω–∞–ø—Ä–∏–º–µ—Ä, 10 —á–∏—Å–ª–∞)")
    bot.register_next_step_handler(msg, process_payday)


def process_payday(message):
    chat_id = message.chat.id
    user_data[chat_id]['payday'] = message.text
    ask_salary(message)


def ask_salary(message):
    chat_id = message.chat.id
    msg = bot.send_message(chat_id, "–ö–∞–∫–∞—è –≤–∞—à–∞ –∑–∞—Ä–ø–ª–∞—Ç–∞? (—á–∏—Å–ª–æ)")
    bot.register_next_step_handler(msg, process_salary)


def process_salary(message):
    chat_id = message.chat.id
    try:
        salary = int(message.text)
        user_data[chat_id]['salary'] = salary
        bot.send_message(chat_id, f"–°–ø–∞—Å–∏–±–æ! –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:\n–ü—Ä–æ—Ñ–µ—Å—Å–∏—è: {user_data[chat_id]['profession']}\n–î–∞—Ç–∞ –∑–∞—Ä–ø–ª–∞—Ç—ã: {user_data[chat_id]['payday']}\n–ó–∞—Ä–ø–ª–∞—Ç–∞: {user_data[chat_id]['salary']}")
        show_main_menu(message) # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–ø—Ä–æ—Å–∞

    except ValueError:
        bot.send_message(chat_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –¥–ª—è –∑–∞—Ä–ø–ª–∞—Ç—ã.")
        ask_salary(message) # –ü–æ–≤—Ç–æ—Ä—è–µ–º –≤–æ–ø—Ä–æ—Å, –µ—Å–ª–∏ –≤–≤–æ–¥ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π


bot.polling()

